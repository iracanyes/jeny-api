/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.iracanyes.fintech.jeny.api;

import com.iracanyes.fintech.jeny.api.model.Account;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "Account", description = "the Account API")
public interface AccountApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /add/account : Add a new account
     *
     * @param correlationId correlationId to track request (required)
     * @param account A JSON object containing info (required)
     * @return Created (status code 201)
     */
    @Operation(
        operationId = "addAccount",
        summary = "Add a new account",
        tags = { "Account" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Created")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/add/account",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> addAccount(
        @NotNull @Parameter(name = "correlation-id", description = "correlationId to track request", required = true, in = ParameterIn.HEADER) @RequestHeader(value = "correlation-id", required = true) String correlationId,
        @Parameter(name = "Account", description = "A JSON object containing info", required = true) @Valid @RequestBody Account account
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /get/account : Get an account
     * This is a Account service description
     *
     * @param correlationId ID of account to fetch (optional)
     * @return Operation successed! (status code 200)
     */
    @Operation(
        operationId = "getAccount",
        summary = "Get an account",
        description = "This is a Account service description",
        tags = { "Account" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Operation successed!", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Account.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/get/account",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Account>> getAccount(
        @Parameter(name = "correlation-id", description = "ID of account to fetch", in = ParameterIn.HEADER) @RequestHeader(value = "correlation-id", required = false) String correlationId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"firstname\" : \"firstname\", \"city\" : \"city\", \"id\" : \"\", \"lastname\" : \"lastname\" }, { \"firstname\" : \"firstname\", \"city\" : \"city\", \"id\" : \"\", \"lastname\" : \"lastname\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
